import Medicine_DB from '../pages/Rdb'
import router from '@ohos.router';
import relationalStore from '@ohos.data.relationalStore';
import {Info} from '../pages/Register';

@Entry
@Component
struct Index{
  /**
   * In low-code mode, do not add anything to the build function, as it will be
   * overwritten by the content generated by the .visual file in the build phase.
   */
  @State private username:string=''
  @State private password:string=''

  build() {

    Column() {
      Text('中药材商城').fontSize(40)
      Grid() {
        GridItem(){
          Text('用户名').fontSize(20)
        }
        GridItem(){
          TextInput({ placeholder: '请输入用户名' })
            .onChange((value: string) => {
              this.username=value;
        })}
        GridItem(){
          Text('密码').fontSize(20)
        }
        GridItem(){
          TextInput({ placeholder: '请输入密码' }).type(InputType.Password)
            .onChange((value: string) => {
              this.password=value;
            })
        }
      }.columnsTemplate('1fr 3fr')
      .columnsGap(10).margin({top:'10%'})
      .rowsGap(15).height('20%')
      Button('登录').width(150).margin({ top: 20 })
        .onClick(()=>{
          if(this.username=='')Info('用户名不能为空');
          else if(this.password=='')Info('密码不能为空');
          else{
            let predicates = new relationalStore.RdbPredicates('Users');
            predicates.equalTo('USERNAME', this.username);
            Medicine_DB.query(predicates,['PASSWORD'],(resultSet:relationalStore.ResultSet)=> {
              resultSet.goToFirstRow();
              if(resultSet.rowCount==0)Info('该用户不存在');
              else if(resultSet.getString(resultSet.getColumnIndex('PASSWORD'))
                  !=this.password)Info('密码错误');
              else {
                router.pushUrl({
                  url: 'pages/MainPage', // 目标url
                  params:{
                    username: this.username
                  }
                }, router.RouterMode.Single, (err) => {
                  if (err) {
                    console.error(`Invoke pushUrl failed, code is ${err.code}, message is ${err.message}`);
                    return;
                  }
                  console.info('Invoke pushUrl succeeded.');
                });
                router.clear();
              }
              resultSet.close();
            })
          }
        })

      Button('注册').width(150).margin({ top: 20 })
        .onClick(()=>{
            router.pushUrl({
              url: 'pages/Register' // 目标url
            }, router.RouterMode.Single, (err) => {
              if (err) {
                console.error(`Invoke pushUrl failed, code is ${err.code}, message is ${err.message}`);
                return;
              }
              console.info('Invoke pushUrl succeeded.');
            });
        })
    }.width('95%').margin({ top: '50%' })
  }
}